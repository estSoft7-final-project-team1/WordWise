name: WordWise CI/CD

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # IMAGE_NAME: wordwise-api

jobs:

  tagging-releasing:
    name: 태그 및 릴리즈 추가
    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }}

    steps:

      - uses: actions/checkout@v4

      - name: versioning and tagging
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: releasing
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build-image:
    name: 도커 이미지 빌드 및 푸시
    needs: tagging-releasing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - name: 배포 환경 설정
        run: echo "${{ secrets.PROD_YML }}" > src/main/resources/application-prod.yml
      
      - name: 깃허브 컨테이너 레지스트리 로그인
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 이미지 태그 및 라벨 생성
        id: meta
        uses: docker/metadata-action@v5
        with:
        # images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          images: ${{ env.REGISTRY }}/${{ github.repository }}  # 수정된 부분
          tags: |
            type=sha
            type=raw,value=${{ needs.tagging-releasing.outputs.tag_name }}
            type=raw,value=latest
      # docker push <REGISTRY>/<IMAGE_NAME>:<TAG>
      - name: 이미지 빌드 및 푸시
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USR }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            ./deploy.sh
